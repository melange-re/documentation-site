<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Sandtracks</title>
        <link>https://melange.re/blog</link>
        <description>The official blog for the Melange project</description>
        <lastBuildDate>Tue, 27 Feb 2024 14:05:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright (c) 2021-present, Melange blog contributors</copyright>
        <item>
            <title><![CDATA[Announcing Melange 3]]></title>
            <link>https://melange.re/blog/posts/announcing-melange-3</link>
            <guid>https://melange.re/blog/posts/announcing-melange-3</guid>
            <pubDate>Tue, 13 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>We are excited to announce the release of <a href="https://github.com/melange-re/melange/releases/tag/3.0.0-51" target="_blank" rel="noreferrer">Melange
3</a>, the latest
version of our backend for the OCaml compiler that emits JavaScript.</p>
<p>This new version comes packed with significant changes, improvements, and a few
necessary removals to ensure a more streamlined and efficient experience for our
users. This new version is both leaner and more robust. We focused on fixing
crashes and removing obsolete functionality, improving the developer and
troubleshooting experience, increasing OCaml compatibility and JavaScript FFI
integration.</p>
]]></description>
            <content:encoded><![CDATA[<p>We are excited to announce the release of <a href="https://github.com/melange-re/melange/releases/tag/3.0.0-51" target="_blank" rel="noreferrer">Melange
3</a>, the latest
version of our backend for the OCaml compiler that emits JavaScript.</p>
<p>This new version comes packed with significant changes, improvements, and a few
necessary removals to ensure a more streamlined and efficient experience for our
users. This new version is both leaner and more robust. We focused on fixing
crashes and removing obsolete functionality, improving the developer and
troubleshooting experience, increasing OCaml compatibility and JavaScript FFI
integration.</p>
<hr>
<p>Here's a rundown of the key updates in Melange 3. Check the <a href="https://melange.re/v3.0.0/" target="_blank" rel="noreferrer">Melange
documentation</a> for further resources.</p>
<h2 id="major-changes-and-removals" tabindex="-1">Major Changes and Removals <a class="header-anchor" href="#major-changes-and-removals" aria-label="Permalink to &quot;Major Changes and Removals&quot;"></a></h2>
<p>In Melange 3, <code>Belt</code> is no longer a dependency for the Melange <code>Stdlib</code>.
Libraries that depend on the Belt modules will need to include <code>(libraries melange.belt)</code> in their build configuration.</p>
<p>The <code>@bs</code> / <code>@bs.*</code> attributes have been replaced. Users of Melange should now
utilize <code>[@u]</code> for uncurried application and <code>[@mel.*]</code> for FFI attributes.
Additionally:</p>
<ul>
<li><code>[@mel.val]</code> has been removed as it was redundant in the Melange FFI​​.</li>
<li><code>[@mel.splice]</code> was removed in favor of <code>[@mel.variadic]</code></li>
</ul>
<p>For this release, most modules in the <code>Js</code> namespace had their APIs unified,
deduplicated and refactored. In cases such as <code>Js.Int</code>, <code>Js.Date</code>, <code>Js.Re</code>,
<code>Js.Float</code>, <code>Js.String</code>, some functions were changed from pipe-first to
pipe-last and labeled arguments were added; and incorporating those made others
obsolete, which we removed. Modules such as <code>Js.List</code>, <code>Js.Null_undefined</code>,
<code>Js.Option</code>, <code>Js.Result</code> and <code>Js.Cast</code> are also no longer present in Melange 3.
Alternatives within <code>Stdlib</code> or <code>Belt</code> are instead​​ recommended.</p>
<h2 id="new-features-and-enhancements" tabindex="-1">New Features and Enhancements <a class="header-anchor" href="#new-features-and-enhancements" aria-label="Permalink to &quot;New Features and Enhancements&quot;"></a></h2>
<p>Melange 3 includes a few interesting new features and enhancements. From syntax
and preprocessing to interop with JavaScript, runtime and error messages, here are some
we chose to highlight:</p>
<h3 id="multiple-ocaml-version-releases" tabindex="-1">Multiple OCaml-version releases <a class="header-anchor" href="#multiple-ocaml-version-releases" aria-label="Permalink to &quot;Multiple OCaml-version releases&quot;"></a></h3>
<p>A few users have expressed concerns related to Melange having a 1:1 relationship to its
OCaml version. This limitation exists because we vendor and modify OCaml's typechecker,
which is usually version-dependent.</p>
<p>In Melange 1, we made some strides to solve this at the syntax level – one Melange version
could work across many compiler switches. But that has a pretty big limitation: editor tooling,
documentation generation and everything else that reads from <code>.cmt</code> artifact files needed to be
in the same compiler switch as the version of the typechecker in use.</p>
<p>Starting in Melange 3, we will be adopting the recent Merlin release strategy: Melange has a
release for every compiler version that it supports, suffixed with the OCaml version that it
corresponds to, e.g. Melange 3 on OCaml 4.14 is <code>v3.0.0-414</code>.</p>
<h3 id="interop" tabindex="-1">Interop <a class="header-anchor" href="#interop" aria-label="Permalink to &quot;Interop&quot;"></a></h3>
<ul>
<li>Modules can be renamed with <code>@mel.as</code></li>
<li><code>@mel.obj</code> and <code>%mel.obj</code> allow renaming the JS object keys with <code>@mel.as</code></li>
<li><code>@mel.new</code> can now be used alongside <code>@mel.send</code> and <code>@mel.send.pipe</code></li>
<li><code>[@@deriving abstract]</code> is now deprecated and split into its two main
features:
<ul>
<li><code>[@@deriving jsProperties]</code> derives a JS object creation function that can
generate a JS object with optional keys (when using <code>@mel.optional]</code>)</li>
<li><code>[@@deriving getSet]</code> derives getter / setter functions for the JS object
derived by the underlying record.</li>
</ul>
</li>
</ul>
<h3 id="error-messages-hints" tabindex="-1">Error messages &amp; Hints <a class="header-anchor" href="#error-messages-hints" aria-label="Permalink to &quot;Error messages &amp; Hints&quot;"></a></h3>
<p>Melange 3 provides more informative error messages originating from both the
<code>melange.ppx</code> and the compiler core​​​​.</p>
<p>In this release, we also introduce a new <code>unprocessed</code> alert to detect code that
has made it to the Melange compiler without having been processed by the Melange
PPX. Besides hinting users to add <code>(preprocess (pps melange.ppx))</code> to their <code>dune</code>
file, this alert more explicitly exposes a common failure mode that puzzles
beginners quite often.</p>
<p>Additionally:</p>
<ul>
<li>The Melange playground now has improved reporting of PPX alerts.</li>
<li>Runtime error rendering in the playground renders better error information.</li>
<li>The JS parser within Melange has been upgraded to Flow v0.225.1.</li>
</ul>
<h3 id="runtime-stdlib" tabindex="-1">Runtime &amp; <code>Stdlib</code> <a class="header-anchor" href="#runtime-stdlib" aria-label="Permalink to &quot;Runtime &amp; `Stdlib`&quot;"></a></h3>
<p>Melange 3 implements more functions in the following modules of the <code>Stdlib</code>:
<code>String</code>, <code>Bytes</code>, <code>Buffer</code>, <code>BytesLabels</code> and <code>StringLabels</code>. Specifically, the
new unicode parsing functions upstream are now available in Melange as well.</p>
<p>Some keys with legacy names have been updated for consistency, such as renaming
<code>RE_EXN_ID</code> to <code>MEL_EXN_ID</code> and <code>BS_PRIVATE_NESTED_SOME_NONE</code> to
<code>MEL_PRIVATE_NESTED_SOME_NONE</code>​​ in the Melange generated JS runtime.</p>
<p>The team also took a look at unicode strings in this version of Melange. A few
noteworthy changes:</p>
<ul>
<li><code>{j| ... |j}</code> interpolation​​​​ now only allows interpolating strings; other
usages of interpolation have started to produce type errors.</li>
<li>Unicode strings such as <code>{js| … |js}</code> can now be used as <code>Format</code> strings.</li>
</ul>
<h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;"></a></h2>
<p>Melange 3 marks a significant step forward in the OCaml-to-JavaScript
compilation process. With these updates, we aim to provide a more robust,
efficient, and user-friendly tool for developers. We encourage users to upgrade
to this new version to take full advantage of the improvements and to adapt to
the breaking changes for a smoother development experience. For a full list of
the changes that made it into this release, feel free to consult the
<a href="https://github.com/melange-re/melange/blob/main/Changes.md#300-2024-01-28" target="_blank" rel="noreferrer">changelog</a>.</p>
<p>Stay tuned for more updates and enhancements as we continue to improve Melange
and support the developer community!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The rest of 2023 in Melange]]></title>
            <link>https://melange.re/blog/posts/the-rest-of-2023-in-melange</link>
            <guid>https://melange.re/blog/posts/the-rest-of-2023-in-melange</guid>
            <pubDate>Thu, 12 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>As October 2023 unfolds, we'd like to present what we're planning to work on
during what remains of 2023. Built upon the invaluable feedback of our users and
our vision for Melange, we are excited about what's next.</p>
]]></description>
            <content:encoded><![CDATA[<p>As October 2023 unfolds, we'd like to present what we're planning to work on
during what remains of 2023. Built upon the invaluable feedback of our users and
our vision for Melange, we are excited about what's next.</p>
<hr>
<p><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F98530216-e8ed-478a-925e-e365ae5b2136_1792x1024.webp" alt=""></p>
<h3 id="melange-v3" tabindex="-1">Melange v3 <a class="header-anchor" href="#melange-v3" aria-label="Permalink to &quot;Melange v3&quot;"></a></h3>
<p>By the close of Q4 2023, we're set to launch Melange v3. Here's a breakdown of
our main focus for shipping a new major release:</p>
<ul>
<li>
<p><strong>Fast, Reliable Builds</strong>: We're fine-tuning Melange to ensure faster, more
reliable project builds. This work is spread across a few fronts:</p>
<ul>
<li>
<p>implementing some missing compiler and build system optimizations, improving
the associated dune rules, and honing the underlying artifact representation
for optimal performance.</p>
</li>
<li>
<p>improving the Melange core to be faster to build, run and evolve.</p>
</li>
</ul>
</li>
<li>
<p><strong>JavaScript Expressivity</strong>:</p>
<ul>
<li>
<p>we're aiming to make JavaScript idioms more intuitive in Melange. We're
implementing more supported interoperability attributes, exploring new ways
of writing bindings and surfacing their documentation and enriching the
existing sections in the Melange docs.</p>
</li>
<li>
<p>we're planning on unifying the Melange core APIs around an abstraction over
both <a href="https://melange.re/v2.0.0/communicate-with-javascript/#pipe-operators" target="_blank" rel="noreferrer">pipe
operators</a> <code>|&gt;</code> and <code>-&gt;</code>,
allowing us to remove some modules where standard library duplication
exists, ensuring a more consistent user experience, reducing confusion and
evolvability of the code.</p>
</li>
<li>
<p>from supporting React 18 to introducing async component support, we're
ensuring Melange stays up to date with the latest in React development. To
make is easier to add these, we're planning to safely type JavaScript
dynamic <code>import()</code>: this will make code more concise by removing the need
for verbose workarounds but also ensures safety, reducing runtime errors</p>
</li>
</ul>
</li>
<li>
<p><strong>Development &amp; Learning Experience</strong></p>
<ul>
<li>
<p>With an emphasis on user-friendliness, we're improving the Melange
Playground with a few requested features: by the end of the quarter it will
offer advanced code diagnostics, bundle the new Melange
v2 <code>melange.dom</code> library, present errors and warnings in a more robust way
and test a new way of learning how to communicate with JavaScript from
Melange.</p>
</li>
<li>
<p>Until the end of 2023, we're going to design and start implementing a whole
new Melange website consolidated around a distinct, consistent brand.</p>
</li>
<li>
<p>We're planning to publish Melange for React Devs, a guided introduction for
developers with existing React.js knowledge, bridging the gap between React
and Melange, showcasing how some common React.js constructs are expressed in
OCaml / Reason and Melange.</p>
</li>
</ul>
</li>
</ul>
<h3 id="the-melange-legacy" tabindex="-1">The Melange Legacy <a class="header-anchor" href="#the-melange-legacy" aria-label="Permalink to &quot;The Melange Legacy&quot;"></a></h3>
<p>Having integrated with the OCaml Platform set of tools and ensured Melange
package availability in the OPAM repository, our previous releases have set the
stage for what's next: with Melange v3, we're striving for an even more robust,
expressive toolchain with an improved set of learning resources and an unmatched
in-browser learning experience on the Melange Playground.</p>
<p>The above is just a glimpse into what we're working on. Consult the <a href="https://docs.google.com/document/d/1q9NWiXun_Lqgv5iNNYm2SKzUGGJ02FpRawKUiTxnJPI/edit#heading=h.9je9ws3oydaz" target="_blank" rel="noreferrer">full
roadmap
document</a> for
more detail around what we'll be up to until the end of 2023.</p>
<p>Thank you for reading and happy hacking!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Introducing Melange 2.0]]></title>
            <link>https://melange.re/blog/posts/introducing-melange-20</link>
            <guid>https://melange.re/blog/posts/introducing-melange-20</guid>
            <pubDate>Wed, 20 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Today, the Melange team is excited to introduce Melange 2.0. This iteration
brings an upgrade to the OCaml 5.1 type checker, along with increased
compatibility with the OCaml Platform. Melange 2.0 unifies the compiler
attributes and libraries under the Melange brand and it improves developer
experience across the ecosystem. We're also publishing a few battle-tested
libraries to <a href="https://github.com/ocaml/opam-repository" target="_blank" rel="noreferrer">OPAM</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p>Today, the Melange team is excited to introduce Melange 2.0. This iteration
brings an upgrade to the OCaml 5.1 type checker, along with increased
compatibility with the OCaml Platform. Melange 2.0 unifies the compiler
attributes and libraries under the Melange brand and it improves developer
experience across the ecosystem. We're also publishing a few battle-tested
libraries to <a href="https://github.com/ocaml/opam-repository" target="_blank" rel="noreferrer">OPAM</a>.</p>
<hr>
<p>Everything we have included in this release has been designed to enhance your
experience writing Reason / OCaml for modern JS workflows. Here's a
comprehensive look at what's new.</p>
<h2 id="what-s-new-in-melange-2-0" tabindex="-1"><strong>What's New in Melange 2.0?</strong> <a class="header-anchor" href="#what-s-new-in-melange-2-0" aria-label="Permalink to &quot;**What's New in Melange 2.0?**&quot;"></a></h2>
<h3 id="ocaml-5" tabindex="-1">OCaml 5 <a class="header-anchor" href="#ocaml-5" aria-label="Permalink to &quot;OCaml 5&quot;"></a></h3>
<p><a href="https://discuss.ocaml.org/t/ocaml-5-1-0-released/13021" target="_blank" rel="noreferrer">OCaml 5.1</a> has just
been released. Melange 2.0 has been upgraded to use the newly released OCaml 5.1
type checker and compiler libs. As the OCaml community starts to upgrade to the
newest version of OCaml, Melange will be co-installable in your OPAM switch.</p>
<p>While the Melange type checker has been upgraded to the 5.x release line,
Melange doesn't yet include support for <a href="https://v2.ocaml.org/manual/effects.html" target="_blank" rel="noreferrer">effect
handlers</a> and some of the multicore
OCaml primitives. Stay tuned for future updates on this.</p>
<h3 id="the-reign-of-melange-ppx" tabindex="-1">The reign of <code>melange.ppx</code> <a class="header-anchor" href="#the-reign-of-melange-ppx" aria-label="Permalink to &quot;The reign of `melange.ppx`&quot;"></a></h3>
<p>The compiler frontend transformations related to
the <a href="https://en.wikipedia.org/wiki/Foreign_function_interface" target="_blank" rel="noreferrer">FFI</a>, <a href="https://melange.re/v2.0.0/communicate-with-javascript/#list-of-attributes-and-extension-nodes" target="_blank" rel="noreferrer">extensions</a> and <a href="https://melange.re/v2.0.0/communicate-with-javascript/#generate-getters-setters-and-constructors" target="_blank" rel="noreferrer">derivers</a> have
been fully extracted from the compiler to the Melange PPX. Going forward, it's
likely you'll need to preprocess most Melange code with <code>melange.ppx</code>.</p>
<h3 id="wrapping-the-melange-core-libraries" tabindex="-1">Wrapping the Melange Core Libraries <a class="header-anchor" href="#wrapping-the-melange-core-libraries" aria-label="Permalink to &quot;Wrapping the Melange Core Libraries&quot;"></a></h3>
<p>In this release, we wrapped the Melange runtime and core libraries. Each library
exposes only a single top-level module, avoiding namespace pollution. The only
modules exposed by Melange are now:</p>
<ul>
<li>
<p>The <code>Js</code> module contains utilities to interact with JavaScript standard APIs.
Modules such as <code>Js_string</code> now only accessible via <code>Js.String</code>.</p>
</li>
<li>
<p>The <code>Belt</code> library contains utilities inherited from BuckleScript. Its
sub-modules similarly nested under <code>Belt</code>, e.g. you'll use <code>Belt.List</code> instead
of <code>Belt_List</code>.</p>
</li>
<li>
<p>Melange 2.0 exposes only a single <code>Stdlib</code> module, where previously it was
leaking e.g. <code>Stdlib__String</code>, etc.</p>
</li>
<li>
<p><strong>New libraries</strong>: The <code>Node</code> module has been extracted to a
new <code>melange.node</code> library. Similarly, <code>Dom</code> is now only accessible via
the <code>melange.dom</code> library. Both libraries are released with the Melange
distribution, but not included by default; they can be added to the
Dune <code>(libraries ...)</code> field.</p>
</li>
</ul>
<h3 id="enforcing-the-melange-brand" tabindex="-1">Enforcing the Melange brand <a class="header-anchor" href="#enforcing-the-melange-brand" aria-label="Permalink to &quot;Enforcing the Melange brand&quot;"></a></h3>
<p><code>bs.*</code> <a href="https://melange.re/v2.0.0/communicate-with-javascript/#attributes" target="_blank" rel="noreferrer">attributes</a> have
been deprecated in this release in favor of <code>mel.*</code>.
The <a href="https://melange.re/v2.0.0/communicate-with-javascript/#binding-to-callbacks" target="_blank" rel="noreferrer">uncurried</a> <code>[@bs]</code> attribute
is now simply <code>[@u]</code>. The next major Melange release will be removing them
entirely. <code>%bs.*</code> <a href="https://melange.re/v2.0.0/communicate-with-javascript/#extension-nodes" target="_blank" rel="noreferrer">extension
nodes</a> have,
however, been replaced with <code>%mel.* </code>due to limitations
in <a href="https://github.com/ocaml-ppx/ppxlib" target="_blank" rel="noreferrer">ppxlib</a>. This is a breaking change.</p>
<h3 id="development-experience" tabindex="-1">Development experience <a class="header-anchor" href="#development-experience" aria-label="Permalink to &quot;Development experience&quot;"></a></h3>
<p>We've done significant work making Melange easier to use in this release:</p>
<ol>
<li>
<p>Attributes like <code>[@{bs,mel}.val]</code> have been deprecated as they're redundant
in the Melange FFI.</p>
</li>
<li>
<p>We're introducing more ways of using <code>@mel.as</code> in:</p>
<ol>
<li>
<p><code>let</code><a href="https://github.com/melange-re/melange/pull/714" target="_blank" rel="noreferrer"> bindings</a> to
allow exporting otherwise invalid OCaml identifiers;</p>
</li>
<li>
<p><code>external</code><a href="https://github.com/melange-re/melange/pull/722" target="_blank" rel="noreferrer"> polymorphic
variants</a> without
needing to use <code>[@mel.{string,int}]</code>;</p>
</li>
<li>
<p><a href="https://github.com/melange-re/melange/pull/732" target="_blank" rel="noreferrer">inline records</a> in both
regular and extensible variants and custom exceptions.</p>
</li>
</ol>
</li>
</ol>
<h3 id="ecosystem" tabindex="-1">Ecosystem <a class="header-anchor" href="#ecosystem" aria-label="Permalink to &quot;Ecosystem&quot;"></a></h3>
<ul>
<li>
<p>With this release, we're starting to publish some widely used libraries from
the <code>melange-community</code> and <code>ahrefs</code> organizations. Be on the lookout for new
Melange-ready releases popping up in the <a href="https://github.com/ocaml/opam-repository" target="_blank" rel="noreferrer">OPAM
repository</a> in the next few
days. <a href="https://github.com/ocaml/opam-repository/pull/24396" target="_blank" rel="noreferrer">Reason 3.10</a> is
also a companion release to Melange 2.0.</p>
</li>
<li>
<p>The new <code>reason-react</code> releases greatly increase developer experience
by <a href="https://github.com/reasonml/reason-react/pull/748" target="_blank" rel="noreferrer">improving the editor
integration</a>. React props
and children now point to the correct source code locations, making React
components much easier to track in your editor.</p>
</li>
<li>
<p>We've also released an OPAM
plugin, <a href="https://github.com/jchavarri/opam-check-npm-deps/" target="_blank" rel="noreferrer">check-npm-deps</a>.
This tool checks whether the NPM dependencies in your <code>node_modules</code> folder
match what libraries released to OPAM need. <code>check-npm-deps</code> is currently in
preview and we're looking for your feedback on how we can evolve it.</p>
</li>
</ul>
<h2 id="support-sponsorship" tabindex="-1"><strong>Support &amp; Sponsorship</strong> <a class="header-anchor" href="#support-sponsorship" aria-label="Permalink to &quot;**Support &amp; Sponsorship**&quot;"></a></h2>
<p>This release was made possible with the continued support of:</p>
<ul>
<li>
<p><a href="https://ahrefs.com/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">Ahrefs</a>,
who have been supporting Melange development since October 2022, having
fully <a href="https://tech.ahrefs.com/ahrefs-is-now-built-with-melange-b14f5ec56df4?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">migrated their codebase to
Melange</a> and
making the work towards <a href="https://anmonteiro.substack.com/p/melange-10-is-here" target="_blank" rel="noreferrer">Melange
1.0</a> possible.</p>
</li>
<li>
<p>The <a href="https://ocaml-sf.org/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">OCaml Software
Foundation</a>,
who has previously <a href="https://twitter.com/_anmonteiro/status/1589044352479035393?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">committed
funding</a> for
the Melange project in October 2022, and renewed it for another half-year
ending in August 2023.</p>
</li>
<li>
<p><a href="https://github.com/sponsors/anmonteiro/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">My (Antonio)
sponsors</a> on
GitHub, both past and present.</p>
</li>
</ul>
<h3 id="parting-thoughts" tabindex="-1">Parting thoughts <a class="header-anchor" href="#parting-thoughts" aria-label="Permalink to &quot;Parting thoughts&quot;"></a></h3>
<p>The goal of Melange is to provide a robust and evolving toolchain that matches
the dynamic nature of modern JS development. Melange 2.0 is a testament to that
commitment. In this release, we've shipped the majority of our <a href="https://docs.google.com/document/d/1UhanM28sOAmS3NI4q4BJBeoCX0SdBMqUIq0rofdpOfU" target="_blank" rel="noreferrer">Q3
roadmap</a>.
Dive in, explore the new features, and let us know your feedback.</p>
<p>Consult the <a href="https://github.com/melange-re/melange/blob/main/Changes.md#200-2023-09-13" target="_blank" rel="noreferrer">full change
log</a> and
the <a href="https://melange.re/v2.0.0/how-to-guides/#to-v2-from-v1" target="_blank" rel="noreferrer">migration guide from
1.0</a> for a more detailed
look at all the changes that went into this packed release.</p>
<p>If you or your company are interested in seeing what Melange can do for your
JavaScript needs, feel free to get in touch. We'd love to hear from you.</p>
<p>Happy hacking!</p>
<p>Antonio &amp; the Melange team</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What's next for Melange]]></title>
            <link>https://melange.re/blog/posts/whats-next-for-melange</link>
            <guid>https://melange.re/blog/posts/whats-next-for-melange</guid>
            <pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>We're quite happy with how far Melange has come -- I previously wrote
about <a href="https://anmonteiro.substack.com/p/melange-10-is-here" target="_blank" rel="noreferrer">releasing Melange
1.0</a> and a <a href="https://anmonteiro.substack.com/p/melange-q2-2023-retrospective" target="_blank" rel="noreferrer">retrospective
on Q2 2023</a>.</p>
<p>But we're not done yet: there's more in slate for the next quarter. I'll tell
you what we're looking to achieve in Q3 2023.</p>
]]></description>
            <content:encoded><![CDATA[<p>We're quite happy with how far Melange has come -- I previously wrote
about <a href="https://anmonteiro.substack.com/p/melange-10-is-here" target="_blank" rel="noreferrer">releasing Melange
1.0</a> and a <a href="https://anmonteiro.substack.com/p/melange-q2-2023-retrospective" target="_blank" rel="noreferrer">retrospective
on Q2 2023</a>.</p>
<p>But we're not done yet: there's more in slate for the next quarter. I'll tell
you what we're looking to achieve in Q3 2023.</p>
<hr>
<p>We've decided to call the next Melange version 2.0 -- we plan to make a few
breaking changes. The main goal for this quarter is to release Melange 2.0. We
will focus across a few different axes.</p>
<h3 id="ocaml-and-ocaml-platform-compatibility" tabindex="-1">OCaml (and OCaml Platform) compatibility <a class="header-anchor" href="#ocaml-and-ocaml-platform-compatibility" aria-label="Permalink to &quot;OCaml (and OCaml Platform) compatibility&quot;"></a></h3>
<p>Melange integrates with the most popular workflows in the OCaml
ecosystem. <a href="https://dune.build/" target="_blank" rel="noreferrer">Dune</a> builds Melange
projects. <a href="https://github.com/ocaml/merlin" target="_blank" rel="noreferrer">Merlin</a> and the <a href="https://github.com/ocaml/ocaml-lsp" target="_blank" rel="noreferrer">OCaml
LSP</a> power editor
integration. <a href="https://github.com/ocaml-ppx/ocamlformat" target="_blank" rel="noreferrer">OCamlformat</a> and <a href="https://github.com/reasonml/reason" target="_blank" rel="noreferrer">Reason</a>'s <code>refmt</code> automatically
format code. <a href="https://github.com/tarides/dune-release" target="_blank" rel="noreferrer">dune-release</a> publishes
Melange libraries and PPX to the <a href="https://github.com/ocaml/opam-repository/" target="_blank" rel="noreferrer">OPAM
repository</a>. <a href="https://github.com/ocaml/odoc" target="_blank" rel="noreferrer">odoc</a> builds
package documentation.</p>
<p>In Melange 2.0, we will:</p>
<ul>
<li>
<p>Upgrade the Melange type-checker and standard library to OCaml 5.1:</p>
<ul>
<li>
<p>Turn off <a href="https://v2.ocaml.org/manual/effects.html" target="_blank" rel="noreferrer">Effect Handlers</a> for the
time being.</p>
</li>
<li>
<p>Provide a compatible <a href="https://v2.ocaml.org/api/Domain.html" target="_blank" rel="noreferrer">Domain</a> module
shim.</p>
</li>
</ul>
</li>
<li>
<p>Move the Melange internal PPX completely out of the compiler,
into <code>melange.ppx</code>:</p>
</li>
<li>
<p>Wrap the <code>Belt</code> and <code>Js</code> libraries:</p>
<ul>
<li>These currently expose all their internal modules. Dune can wrap them nicely
under a single top-level module.</li>
</ul>
</li>
<li>
<p>Break out <code>melange.node</code>:</p>
<ul>
<li>The Node.js bindings are rarely used. We will require <code>melange.node</code> be
added to the Dune <code>libraries</code> field.</li>
</ul>
</li>
</ul>
<h3 id="developer-experience" tabindex="-1">Developer Experience <a class="header-anchor" href="#developer-experience" aria-label="Permalink to &quot;Developer Experience&quot;"></a></h3>
<p>While Melange already integrates with the OCaml Platform tooling and workflow,
there is space to make the experience of developing Melange projects even
better.</p>
<p>We want to focus on:</p>
<ul>
<li>
<p>Improving the editing experience:</p>
<ul>
<li>
<p>Melange can compile FFI <code>external</code>s better, in a way that works better with
analysis tools such as Merlin.</p>
</li>
<li>
<p><code>reason-react-ppx</code> doesn't faithfully respect the JSX node locations. We
want to fix that so that &quot;go to definition&quot; works better for Reason JSX.</p>
</li>
</ul>
</li>
<li>
<p>Improving the interaction between OPAM and npm:</p>
<ul>
<li>
<p>Melange bridges the OPAM and npm ecosystems. Some packages published to OPAM
depend on npm dependencies at runtime.</p>
</li>
<li>
<p>We want to <a href="https://github.com/melange-re/melange/issues/629" target="_blank" rel="noreferrer">explore
solving</a> this issue,
starting with a tool that checks that the required npm dependencies are
installed in Melange projects.</p>
</li>
</ul>
</li>
<li>
<p>Generating <a href="https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?hl=en_US&amp;pli=1&amp;pli=1" target="_blank" rel="noreferrer">Source
Maps</a>:</p>
<ul>
<li>
<p>Source Maps allow mapping generated code back to the original OCaml / Reason
source.</p>
</li>
<li>
<p>Among other benefits, source maps allow for better stack traces that map to
the original lines of code that triggered runtime crashes.</p>
</li>
</ul>
</li>
</ul>
<h3 id="documentation-and-branding" tabindex="-1">Documentation and Branding: <a class="header-anchor" href="#documentation-and-branding" aria-label="Permalink to &quot;Documentation and Branding:&quot;"></a></h3>
<p>We released <a href="https://melange.re/" target="_blank" rel="noreferrer">melange.re</a> alongside Melange 1.0. The website
contains our initial efforts to document Melange workflows, and it can be
improved upon. Over the next few months, we will:</p>
<ul>
<li>
<p>Develop unified Melange brand guidelines and apply them to the website.</p>
</li>
<li>
<p>Continue documenting Melange workflows:</p>
<ul>
<li>We've already seen some <a href="https://github.com/melange-re/melange-re.github.io/pulls?q=is%3Apr+is%3Aclosed" target="_blank" rel="noreferrer">user
contributions</a>.
We're looking to keep improving the Melange documentation in response to
feedback from Melange users.</li>
</ul>
</li>
</ul>
<h3 id="wrapping-up" tabindex="-1">Wrapping up <a class="header-anchor" href="#wrapping-up" aria-label="Permalink to &quot;Wrapping up&quot;"></a></h3>
<p>We have a lot of work ahead of us. The best way to help us is to <a href="https://melange.re/v1.0.0/getting-started/" target="_blank" rel="noreferrer">try
Melange</a>. We'd love to read your
feedback.</p>
<p>I tried to summarize what we'll be up to in the near future. The full <a href="https://docs.google.com/document/d/1UhanM28sOAmS3NI4q4BJBeoCX0SdBMqUIq0rofdpOfU/edit" target="_blank" rel="noreferrer">Melange
Roadmap for Q3
2023</a> goes
into more detail.</p>
<p>Happy hacking!</p>
]]></content:encoded>
        </item>
    </channel>
</rss>